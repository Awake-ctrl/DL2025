{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\DL2025\\\\frontend\\\\src\\\\pages\\\\KernelExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kernels = {\n  Identity: {\n    matrix: [[0, 0, 0], [0, 1, 0], [0, 0, 0]]\n  },\n  BoxBlur: {\n    matrix: [[1 / 9, 1 / 9, 1 / 9], [1 / 9, 1 / 9, 1 / 9], [1 / 9, 1 / 9, 1 / 9]]\n  },\n  GaussianBlur: {\n    matrix: [[1 / 16, 2 / 16, 1 / 16], [2 / 16, 4 / 16, 2 / 16], [1 / 16, 2 / 16, 1 / 16]]\n  },\n  Sharpen: {\n    matrix: [[0, -1, 0], [-1, 5, -1], [0, -1, 0]]\n  },\n  EdgeDetection: {\n    matrix: [[1, 0, -1], [0, 0, 0], [-1, 0, 1]]\n  },\n  Emboss: {\n    matrix: [[-2, -1, 0], [-1, 1, 1], [0, 1, 2]]\n  }\n};\nconst KernelExplorer = () => {\n  _s();\n  const originalCanvasRef = useRef();\n  const filteredCanvasRef = useRef();\n  const fileInputRef = useRef();\n  const [image, setImage] = useState(null);\n  const [kernel, setKernel] = useState('Identity');\n  const [message, setMessage] = useState('Click on the image to apply kernel at that pixel');\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const img = new Image();\n      img.src = reader.result;\n      img.onload = () => {\n        setImage(img);\n        drawImage(img);\n        clearFilteredCanvas(img.width, img.height);\n      };\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const drawImage = img => {\n    const canvas = originalCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx.drawImage(img, 0, 0);\n  };\n  const clearFilteredCanvas = (w, h) => {\n    const canvas = filteredCanvasRef.current;\n    canvas.width = w;\n    canvas.height = h;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, w, h);\n  };\n  const handleCanvasClick = e => {\n    if (!image) return;\n    const canvas = originalCanvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = Math.floor(e.clientX - rect.left);\n    const y = Math.floor(e.clientY - rect.top);\n    setMessage(`Applied kernel at (${x}, ${y})`);\n    applyConvolutionAtPoint(x, y);\n  };\n  const applyConvolutionAtPoint = (x, y) => {\n    const inputCanvas = originalCanvasRef.current;\n    const outputCanvas = filteredCanvasRef.current;\n    const inputCtx = inputCanvas.getContext('2d');\n    const outputCtx = outputCanvas.getContext('2d');\n    const {\n      width,\n      height\n    } = inputCanvas;\n    const imageData = inputCtx.getImageData(0, 0, width, height);\n    const outputData = outputCtx.createImageData(width, height);\n    const matrix = kernels[kernel].matrix;\n    const side = 3;\n    const halfSide = Math.floor(side / 2);\n    const getPixel = (x, y, c) => {\n      const i = (y * width + x) * 4 + c;\n      return imageData.data[i];\n    };\n    const setPixel = (x, y, r, g, b) => {\n      const i = (y * width + x) * 4;\n      outputData.data[i] = r;\n      outputData.data[i + 1] = g;\n      outputData.data[i + 2] = b;\n      outputData.data[i + 3] = 255;\n    };\n    for (let j = -halfSide; j <= halfSide; j++) {\n      for (let i = -halfSide; i <= halfSide; i++) {\n        const cx = x + i;\n        const cy = y + j;\n        if (cx < 0 || cy < 0 || cx >= width || cy >= height) continue;\n        let r = 0,\n          g = 0,\n          b = 0;\n        for (let ky = 0; ky < side; ky++) {\n          for (let kx = 0; kx < side; kx++) {\n            const px = cx + kx - halfSide;\n            const py = cy + ky - halfSide;\n            if (px >= 0 && px < width && py >= 0 && py < height) {\n              const weight = matrix[ky][kx];\n              r += getPixel(px, py, 0) * weight;\n              g += getPixel(px, py, 1) * weight;\n              b += getPixel(px, py, 2) * weight;\n            }\n          }\n        }\n        setPixel(cx, cy, Math.min(255, Math.max(0, r)), Math.min(255, Math.max(0, g)), Math.min(255, Math.max(0, b)));\n      }\n    }\n    outputCtx.putImageData(outputData, 0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30,\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFAF Selective Image Kernel Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload an image, pick a kernel, and click on a pixel to apply it only at that location!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload,\n      ref: fileInputRef,\n      style: {\n        marginBottom: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"kernel\",\n        children: \"Choose Kernel: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"kernel\",\n        value: kernel,\n        onChange: e => setKernel(e.target.value),\n        children: Object.keys(kernels).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'gray'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: originalCanvasRef,\n          style: {\n            border: '1px solid #ccc',\n            cursor: 'crosshair'\n          },\n          onClick: handleCanvasClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filtered Output (Selected Region Only)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: filteredCanvasRef,\n          style: {\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(KernelExplorer, \"TnhmZp6CicpKRuhbqbGtW4KOWo0=\");\n_c = KernelExplorer;\nexport default KernelExplorer;\nvar _c;\n$RefreshReg$(_c, \"KernelExplorer\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","kernels","Identity","matrix","BoxBlur","GaussianBlur","Sharpen","EdgeDetection","Emboss","KernelExplorer","_s","originalCanvasRef","filteredCanvasRef","fileInputRef","image","setImage","kernel","setKernel","message","setMessage","handleImageUpload","event","file","target","files","reader","FileReader","onload","img","Image","src","result","drawImage","clearFilteredCanvas","width","height","readAsDataURL","canvas","current","ctx","getContext","w","h","fillStyle","fillRect","handleCanvasClick","e","rect","getBoundingClientRect","x","Math","floor","clientX","left","y","clientY","top","applyConvolutionAtPoint","inputCanvas","outputCanvas","inputCtx","outputCtx","imageData","getImageData","outputData","createImageData","side","halfSide","getPixel","c","i","data","setPixel","r","g","b","j","cx","cy","ky","kx","px","py","weight","min","max","putImageData","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","marginBottom","htmlFor","id","value","Object","keys","map","key","color","display","gap","border","cursor","onClick","_c","$RefreshReg$"],"sources":["D:/projects/DL2025/frontend/src/pages/KernelExplorer.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nconst kernels = {\r\n  Identity: {\r\n    matrix: [\r\n      [0, 0, 0],\r\n      [0, 1, 0],\r\n      [0, 0, 0],\r\n    ],\r\n  },\r\n  BoxBlur: {\r\n    matrix: [\r\n      [1 / 9, 1 / 9, 1 / 9],\r\n      [1 / 9, 1 / 9, 1 / 9],\r\n      [1 / 9, 1 / 9, 1 / 9],\r\n    ],\r\n  },\r\n  GaussianBlur: {\r\n    matrix: [\r\n      [1 / 16, 2 / 16, 1 / 16],\r\n      [2 / 16, 4 / 16, 2 / 16],\r\n      [1 / 16, 2 / 16, 1 / 16],\r\n    ],\r\n  },\r\n  Sharpen: {\r\n    matrix: [\r\n      [0, -1, 0],\r\n      [-1, 5, -1],\r\n      [0, -1, 0],\r\n    ],\r\n  },\r\n  EdgeDetection: {\r\n    matrix: [\r\n      [1, 0, -1],\r\n      [0, 0, 0],\r\n      [-1, 0, 1],\r\n    ],\r\n  },\r\n  Emboss: {\r\n    matrix: [\r\n      [-2, -1, 0],\r\n      [-1, 1, 1],\r\n      [0, 1, 2],\r\n    ],\r\n  },\r\n};\r\n\r\nconst  KernelExplorer= () => {\r\n  const originalCanvasRef = useRef();\r\n  const filteredCanvasRef = useRef();\r\n  const fileInputRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const [kernel, setKernel] = useState('Identity');\r\n  const [message, setMessage] = useState('Click on the image to apply kernel at that pixel');\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const img = new Image();\r\n      img.src = reader.result;\r\n      img.onload = () => {\r\n        setImage(img);\r\n        drawImage(img);\r\n        clearFilteredCanvas(img.width, img.height);\r\n      };\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const drawImage = (img) => {\r\n    const canvas = originalCanvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    ctx.drawImage(img, 0, 0);\r\n  };\r\n\r\n  const clearFilteredCanvas = (w, h) => {\r\n    const canvas = filteredCanvasRef.current;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillRect(0, 0, w, h);\r\n  };\r\n\r\n  const handleCanvasClick = (e) => {\r\n    if (!image) return;\r\n\r\n    const canvas = originalCanvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = Math.floor(e.clientX - rect.left);\r\n    const y = Math.floor(e.clientY - rect.top);\r\n    setMessage(`Applied kernel at (${x}, ${y})`);\r\n\r\n    applyConvolutionAtPoint(x, y);\r\n  };\r\n\r\n  const applyConvolutionAtPoint = (x, y) => {\r\n    const inputCanvas = originalCanvasRef.current;\r\n    const outputCanvas = filteredCanvasRef.current;\r\n    const inputCtx = inputCanvas.getContext('2d');\r\n    const outputCtx = outputCanvas.getContext('2d');\r\n\r\n    const { width, height } = inputCanvas;\r\n    const imageData = inputCtx.getImageData(0, 0, width, height);\r\n    const outputData = outputCtx.createImageData(width, height);\r\n\r\n    const matrix = kernels[kernel].matrix;\r\n    const side = 3;\r\n    const halfSide = Math.floor(side / 2);\r\n\r\n    const getPixel = (x, y, c) => {\r\n      const i = (y * width + x) * 4 + c;\r\n      return imageData.data[i];\r\n    };\r\n\r\n    const setPixel = (x, y, r, g, b) => {\r\n      const i = (y * width + x) * 4;\r\n      outputData.data[i] = r;\r\n      outputData.data[i + 1] = g;\r\n      outputData.data[i + 2] = b;\r\n      outputData.data[i + 3] = 255;\r\n    };\r\n\r\n    for (let j = -halfSide; j <= halfSide; j++) {\r\n      for (let i = -halfSide; i <= halfSide; i++) {\r\n        const cx = x + i;\r\n        const cy = y + j;\r\n        if (cx < 0 || cy < 0 || cx >= width || cy >= height) continue;\r\n\r\n        let r = 0,\r\n          g = 0,\r\n          b = 0;\r\n        for (let ky = 0; ky < side; ky++) {\r\n          for (let kx = 0; kx < side; kx++) {\r\n            const px = cx + kx - halfSide;\r\n            const py = cy + ky - halfSide;\r\n            if (px >= 0 && px < width && py >= 0 && py < height) {\r\n              const weight = matrix[ky][kx];\r\n              r += getPixel(px, py, 0) * weight;\r\n              g += getPixel(px, py, 1) * weight;\r\n              b += getPixel(px, py, 2) * weight;\r\n            }\r\n          }\r\n        }\r\n\r\n        setPixel(cx, cy, Math.min(255, Math.max(0, r)), Math.min(255, Math.max(0, g)), Math.min(255, Math.max(0, b)));\r\n      }\r\n    }\r\n\r\n    outputCtx.putImageData(outputData, 0, 0);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 30, fontFamily: 'Arial' }}>\r\n      <h1>🎯 Selective Image Kernel Visualizer</h1>\r\n      <p>Upload an image, pick a kernel, and click on a pixel to apply it only at that location!</p>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageUpload}\r\n        ref={fileInputRef}\r\n        style={{ marginBottom: 20 }}\r\n      />\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label htmlFor=\"kernel\">Choose Kernel: </label>\r\n        <select\r\n          id=\"kernel\"\r\n          value={kernel}\r\n          onChange={(e) => setKernel(e.target.value)}\r\n        >\r\n          {Object.keys(kernels).map((key) => (\r\n            <option key={key} value={key}>\r\n              {key}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <p style={{ color: 'gray' }}>{message}</p>\r\n\r\n      <div style={{ display: 'flex', gap: 20 }}>\r\n        <div>\r\n          <h3>Original Image</h3>\r\n          <canvas\r\n            ref={originalCanvasRef}\r\n            style={{ border: '1px solid #ccc', cursor: 'crosshair' }}\r\n            onClick={handleCanvasClick}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Filtered Output (Selected Region Only)</h3>\r\n          <canvas\r\n            ref={filteredCanvasRef}\r\n            style={{ border: '1px solid #ccc' }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KernelExplorer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}