{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CTableHead } from './CTableHead.js';\nimport { CTableHeaderCell } from './CTableHeaderCell.js';\nimport { CTableBody } from './CTableBody.js';\nimport { CTableDataCell } from './CTableDataCell.js';\nimport { CTableRow } from './CTableRow.js';\nimport { CTableFoot } from './CTableFoot.js';\nimport { CTableCaption } from './CTableCaption.js';\nimport { CTableResponsiveWrapper } from './CTableResponsiveWrapper.js';\nimport { colorPropType } from '../../props.js';\nimport { getColumnNames, getColumnLabel } from './utils.js';\nvar CTable = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    align = _a.align,\n    borderColor = _a.borderColor,\n    bordered = _a.bordered,\n    borderless = _a.borderless,\n    caption = _a.caption,\n    captionTop = _a.captionTop,\n    className = _a.className,\n    color = _a.color,\n    columns = _a.columns,\n    footer = _a.footer,\n    hover = _a.hover,\n    items = _a.items,\n    responsive = _a.responsive,\n    small = _a.small,\n    striped = _a.striped,\n    stripedColumns = _a.stripedColumns,\n    tableFootProps = _a.tableFootProps,\n    tableHeadProps = _a.tableHeadProps,\n    rest = __rest(_a, [\"children\", \"align\", \"borderColor\", \"bordered\", \"borderless\", \"caption\", \"captionTop\", \"className\", \"color\", \"columns\", \"footer\", \"hover\", \"items\", \"responsive\", \"small\", \"striped\", \"stripedColumns\", \"tableFootProps\", \"tableHeadProps\"]);\n  var columnNames = useMemo(function () {\n    return getColumnNames(columns, items);\n  }, [columns, items]);\n  return React.createElement(CTableResponsiveWrapper, {\n    responsive: responsive\n  }, React.createElement(\"table\", __assign({\n    className: classNames('table', (_b = {}, _b[\"align-\".concat(align)] = align, _b[\"border-\".concat(borderColor)] = borderColor, _b[\"caption-top\"] = captionTop || caption === 'top', _b['table-bordered'] = bordered, _b['table-borderless'] = borderless, _b[\"table-\".concat(color)] = color, _b['table-hover'] = hover, _b['table-sm'] = small, _b['table-striped'] = striped, _b['table-striped-columns'] = stripedColumns, _b), className)\n  }, rest, {\n    ref: ref\n  }), (caption && caption !== 'top' || captionTop) && React.createElement(CTableCaption, null, caption || captionTop), columns && React.createElement(CTableHead, __assign({}, tableHeadProps), React.createElement(CTableRow, null, columns.map(function (column, index) {\n    return React.createElement(CTableHeaderCell, __assign({}, column._props && __assign({}, column._props), column._style && {\n      style: __assign({}, column._style)\n    }, {\n      key: index\n    }), getColumnLabel(column));\n  }))), items && React.createElement(CTableBody, null, items.map(function (item, index) {\n    return React.createElement(CTableRow, __assign({}, item._props && __assign({}, item._props), {\n      key: index\n    }), columnNames && columnNames.map(function (colName, index) {\n      // eslint-disable-next-line unicorn/no-negated-condition\n      return item[colName] !== undefined ? React.createElement(CTableDataCell, __assign({}, item._cellProps && __assign(__assign({}, item._cellProps['all'] && __assign({}, item._cellProps['all'])), item._cellProps[colName] && __assign({}, item._cellProps[colName])), {\n        key: index\n      }), item[colName]) : null;\n    }));\n  })), children, footer && React.createElement(CTableFoot, __assign({}, tableFootProps), React.createElement(CTableRow, null, footer.map(function (item, index) {\n    return React.createElement(CTableDataCell, __assign({}, typeof item === 'object' && item._props && __assign({}, item._props), {\n      key: index\n    }), typeof item === 'object' ? item.label : item);\n  })))));\n});\nCTable.propTypes = {\n  align: PropTypes.oneOf(['bottom', 'middle', 'top']),\n  borderColor: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  caption: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf(['top'])]),\n  captionTop: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  columns: PropTypes.array,\n  footer: PropTypes.array,\n  hover: PropTypes.bool,\n  items: PropTypes.array,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])]),\n  small: PropTypes.bool,\n  striped: PropTypes.bool,\n  stripedColumns: PropTypes.bool,\n  tableFootProps: PropTypes.shape(__assign({}, CTableFoot.propTypes)),\n  tableHeadProps: PropTypes.shape(__assign({}, CTableHead.propTypes))\n};\nCTable.displayName = 'CTable';\nexport { CTable };","map":{"version":3,"names":["CTable","forwardRef","_a","ref","children","align","borderColor","bordered","borderless","caption","captionTop","className","color","columns","footer","hover","items","responsive","small","striped","stripedColumns","tableFootProps","tableHeadProps","rest","__rest","columnNames","useMemo","getColumnNames","React","createElement","CTableResponsiveWrapper","__assign","classNames","_b","concat","CTableCaption","CTableHead","CTableRow","map","column","index","CTableHeaderCell","_props","_style","style","key","getColumnLabel","CTableBody","item","colName","undefined","CTableDataCell","_cellProps","CTableFoot","label","propTypes","PropTypes","oneOf","string","bool","oneOfType","node","colorPropType","array","shape","displayName"],"sources":["../../../../src/components/table/CTable.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}